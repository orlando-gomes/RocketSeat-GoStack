//importando o módulo express já instalado
const express = require('express');

//instanciando o servidor
const server = express();
//Configurando o servidor para suportar JSON
server.use(express.json());

//Middleware local para testar o index passado
const testIndex = (req, res, next)=>{
  const us = users[req.params.index];
  if (!us) {
    return res.status(400).json({error:'Usuário não existe'})
  }
  req.theIndex = req.params.index;
  return next();
}

//Middleware local para testar o nome passado
const textName = (req, res, next)=>{
  const nome = req.body.nome;
  if (!nome) {
    return res.status(400).json({error: 'O nome é requerido'})
  }
  req.theName = nome;
  return next();
}


//rota exemplo para query params
server.get('/teste', (req, res)=>{
  const {nome, idade} = req.query;
  return res.json({msg: `A idade é ${idade} e o nome é ${nome}`})
})

//array base de dados
const users = ['André', 'José', 'Maria'];

//Listar usuários
server.get('/users', (req, res)=>{
  return res.json(users);
})

//Listar um usuário pelo index do array
server.get('/users/:index', testIndex, (req, res)=>{
  const {index} = req.params;
  return res.json(users[index]);
})

//Criar um usuário
server.post('/users', textName, (req, res)=>{
  users.push(req.theName);
  return res.json(users);
});

//Alterar um usuário
server.put('/users/:index', testIndex, textName, (req, res)=>{
  users[req.theIndex] = req.theName;
  return res.json(users);
})

//Apagar um usuário
server.delete('/users/:index', testIndex, (req, res) => {
  users.splice(req.theName, 1);
  return res.json(users);
});



//escutando a porta 3000
server.listen(3000);
